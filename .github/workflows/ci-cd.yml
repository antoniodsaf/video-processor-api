name: Deploy AWS App

on:
  push:
    branches:
      - master

env:
  REGION_DEFAULT: "us-east-1"
  CLUSTER_NAME: "videoprocessor-cluster"

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Make gradlew Executable
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew test

  build:
    needs: [ unit-tests ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Make gradlew Executable
        run: chmod +x gradlew

      - name: Build Gradle Project
        run: ./gradlew assemble

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/video-processor-rest-api:latest

  sonar:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}"
          restore-keys: ${{ runner.os }}-gradle

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Make gradlew Executable
        run: chmod +x gradlew

      - name: Analyze with SonarCloud
        run: ./gradlew build sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

  deploy:
    needs: [ sonar ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ID }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

      - name: Update Kube Config
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.REGION_DEFAULT }}

      - name: Kube Apply
        run: |
          kubectl apply -f infra/eks/deployment.yaml
          kubectl apply -f infra/eks/svc.yaml